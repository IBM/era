CPU ?= ariane
ARCH ?= riscv
ifdef DO_CROSS_COMPILATION
CROSS_COMPILE ?= riscv64-unknown-linux-gnu-
endif

ifdef COMPILE_TO_ESP
ESP_ROOT ?= ../../esp
ESP_DRIVERS ?= $(ESP_ROOT)/soft/$(CPU)/drivers
endif

CC = gcc -std=c99


INCDIR ?=
INCDIR += -I./include
ifdef COMPILE_TO_ESP
INCDIR += -I$(ESP_DRIVERS)/include
endif

CFLAGS ?= -O2
CFLAGS += $(INCDIR)
CFLAGS += -DINT_TIME
CFLAGS += -DGRID_MAP_X_DIM=$(CONFIG_GRID_MAP_X_DIM)
CFLAGS += -DGRID_MAP_Y_DIM=$(CONFIG_GRID_MAP_Y_DIM)
CFLAGS += -DGRID_MAP_RESLTN=$(CONFIG_GRID_MAP_RESLTN)
CFLAGS += -DRAYTR_RANGE=$(CONFIG_RAYTR_RANGE)
ifdef COMPILE_TO_ESP
CFLAGS += -DCOMPILE_TO_ESP
endif
#  -- ALWAYS use this one! --   ifdef CONFIG_ESP_INTERFACE
CFLAGS += -DUSE_ESP_INTERFACE
#   endif


 
ifdef CONFIG_FFT_EN
CFLAGS += -DHW_FFT
CFLAGS += -DUSE_FFT_FX=$(CONFIG_FFT_FX)
endif
ifdef CONFIG_FFT_BITREV
CFLAGS += -DHW_FFT_BITREV
endif
ifdef CONFIG_VITERBI_EN
CFLAGS += -DHW_VIT
endif
ifdef CONFIG_KERAS_CV_BYPASS
CFLAGS += -DBYPASS_KERAS_CV_CODE
endif

ifdef SHOW_FUSE
CFLAGS += -DWRITE_FUSED_MAPS
endif

ifdef CONFIG_DEBUG
CFLAGS += -DDEBUG_MODE
endif

ifdef CONFIG_VERBOSE
CFLAGS += -DVERBOSE_MODE
endif

ifdef CONFIG_FUSED_MAP
CFLAGS += -DWRITE_FUSED_MAPS
endif

ifdef CONFIG_ASCII_MAP
CFLAGS += -DWRITE_ASCII_MAP
endif

ifdef CONFIG_GDB
CFLAGS += -g
endif

LDLIBS ?=
ifdef COMPILE_TO_ESP
LDLIBS += -L$(ESP_DRIVERS)/contig_alloc
LDLIBS += -L$(ESP_DRIVERS)/test
LDLIBS += -L$(ESP_DRIVERS)/libesp
endif

LDFLAGS ?=
LDFLAGS += -lm
LDFLAGS += -lpthread
ifdef COMPILE_TO_ESP
LDFLAGS += -lrt
LDFLAGS += -lesp
LDFLAGS += -ltest
LDFLAGS += -lcontig
endif

SRC_ERA1 = src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c  src/sync_long.c src/sync_short.c src/xmit_pipe.c
SRC_ERA2 = $(SRC_ERA1)
SRC_PERA1 = $(SRC_ERA1)
SRC_PERA2 = $(SRC_ERA1)
SRC_RECV = src/recv_main.c src/complex_ops.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c
SRC_XMIT = src/xmit_main.c src/crc.c src/fft.c src/xmit_pipe.c

#SRC_T = $(foreach f, $(wildcard src/*.c), $(shell basename $(f)))
SRC_D = $(wildcard src/*.c)
HDR_T = $(wildcard include/*.h)

OBJ_ERA1 = $(SRC_ERA1:src/%.c=obj_era1/%.o)
OBJ_ERA2 = $(SRC_ERA2:src/%.c=obj_era2/%.o)
OBJ_PERA1 = $(SRC_ERA1:src/%.c=obj_pera1/%.o)
OBJ_PERA2 = $(SRC_ERA2:src/%.c=obj_pera2/%.o)
OBJ_RECV = $(SRC_RECV:src/%.c=obj_recv/%.o)
OBJ_XMIT = $(SRC_XMIT:src/%.c=obj_xmit/%.o)

VPATH = ./src

TARGET_ERA1=era1_$(CONFIG_GRID_MAP_X_DIM)_$(CONFIG_GRID_MAP_Y_DIM)_$(CONFIG_GRID_MAP_RESLTN)
TARGET_ERA2=era2_$(CONFIG_GRID_MAP_X_DIM)_$(CONFIG_GRID_MAP_Y_DIM)_$(CONFIG_GRID_MAP_RESLTN)
TARGET_PERA1=pera1_$(CONFIG_GRID_MAP_X_DIM)_$(CONFIG_GRID_MAP_Y_DIM)_$(CONFIG_GRID_MAP_RESLTN)
TARGET_PERA2=pera2_$(CONFIG_GRID_MAP_X_DIM)_$(CONFIG_GRID_MAP_Y_DIM)_$(CONFIG_GRID_MAP_RESLTN)
TARGET_RECV=do_recv_pipe
TARGET_XMIT=do_xmit_pipe

all: obj_era1 obj_era2 obj_pera1 obj_pera2 obj_recv obj_xmit $(TARGET_ERA1) $(TARGET_ERA2) $(TARGET_PERA1) $(TARGET_PERA2) $(TARGET_RECV) $(TARGET_XMIT)

obj_era1/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -DASCII_FN='"asciimap_era1_"' -DIMAGE_FN='"gridimage_era1_"' -DBAG_PORT=5556 -DXMIT_PORT=5558 -DRECV_PORT=5559 -DCAR_PORT=5562 -c $< -o $@

obj_era2/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -DASCII_FN='"asciimap_era2_"' -DIMAGE_FN='"gridimage_era2_"' -DBAG_PORT=5557 -DXMIT_PORT=5560 -DRECV_PORT=5561 -DCAR_PORT=5563 -c $< -o $@

obj_pera1/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -DASCII_FN='"asciimap_pera1_"' -DIMAGE_FN='"gridimage_pera1_"' -DBAG_PORT=5556 -DXMIT_PORT=5558 -DRECV_PORT=5559 -DCAR_PORT=5562 -DPARALLEL_PTHREADS -c $< -o $@

obj_pera2/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -DASCII_FN='"asciimap_pera2_"' -DIMAGE_FN='"gridimage_pera2_"' -DBAG_PORT=5557 -DXMIT_PORT=5560 -DRECV_PORT=5561 -DCAR_PORT=5563 -DPARALLEL_PTHREADS -c $< -o $@

obj_recv/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -c $< -o $@

obj_xmit/%.o: %.c
	$(CROSS_COMPILE)$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_ERA1): $(HDR_T)


$(OBJ_ERA2): $(HDR_T)


$(OBJ_PERA1): $(HDR_T)


$(OBJ_PERA2): $(HDR_T)


$(OBJ_RECV): $(HDR_T)


$(OBJ_XMIT): $(HDR_T)


$(TARGET_ERA1): obj_era1 $(TARGET_ERA1).exe
	echo "Done building $@"

$(TARGET_ERA2): obj_era2 $(TARGET_ERA2).exe
	echo "Done building $@"

$(TARGET_PERA1): obj_era1 $(TARGET_PERA1).exe
	echo "Done building $@"

$(TARGET_PERA2): obj_era2 $(TARGET_PERA2).exe
	echo "Done building $@"

$(TARGET_RECV): obj_recv $(TARGET_RECV).exe
	echo "Done building $@"

$(TARGET_XMIT): obj_xmit $(TARGET_XMIT).exe
	echo "Done building $@"

$(TARGET_ERA1).exe: $(OBJ_ERA1)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

$(TARGET_ERA2).exe: $(OBJ_ERA2)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

$(TARGET_PERA1).exe: $(OBJ_PERA1)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

$(TARGET_PERA2).exe: $(OBJ_PERA2)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

$(TARGET_RECV).exe: $(OBJ_RECV)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

$(TARGET_XMIT).exe: $(OBJ_XMIT)
ifdef COMPILE_TO_ESP
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/contig_alloc/ libcontig.a
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/test
	CROSS_COMPILE=$(CROSS_COMPILE) $(MAKE) -C $(ESP_DRIVERS)/libesp
endif
	$(CROSS_COMPILE)$(CC) $(LDLIBS) $^ -o $@ $(LDFLAGS)

clean:
	$(RM) $(OBJ_ERA1) $(OBJ_ERA2) $(OBJ_PERA1) $(OBJ_PERA2) $(OBJ_RECV) $(OBJ_XMIT)
	$(RM) $(TARGET_ERA1) $(TARGET_ERA2) $(TARGET_PERA1) $(TARGET_PERA2) $(TARGET_RECV) $(TARGET_XMIT)
	$(RM) -r obj_era1 obj_era2 obj_pera1 obj_pera2 obj_recv obj_xmit

clobber: clean


obj_era1:
	mkdir $@

obj_era2:
	mkdir $@

obj_pera1:
	mkdir $@

obj_pera2:
	mkdir $@

obj_recv:
	mkdir $@

obj_xmit:
	mkdir $@

.PHONY: all clean


#depend:;	makedepend -fMakefile -- $(CFLAGS) -- $(SRC_D)
# DO NOT DELETE THIS LINE -- make depend depends on it.

