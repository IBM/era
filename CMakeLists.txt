cmake_minimum_required(VERSION 2.8.11)
project(ERA)

#This adds debugging info; remove if you want every ounce of speed, etc.
set (CMAKE_C_FLAGS "-g ${CMAKE_C_FLAGS}")

macro(use_c99)
  if (CMAKE_VERSION VERSION_LESS "3.1")
    if (CMAKE_C_COMPILER_ID STREQUAL "GNU")
      set (CMAKE_C_FLAGS "-std=c99 ${CMAKE_C_FLAGS}")
    endif ()
  else ()
    set (CMAKE_STANDARD_99)
  endif ()
endmacro(use_c99)

use_c99()

#variable_watch(CMAKE_BUILD_TYPE)
#set (CMAKE_BUILD_TYPE "Debug" CACHE STRING "Default build type: Debug" FORCE)
#set (CMAKE_BUILD_TYPE "Release" CACHE STRING "Default build type: Release" FORCE)

# None of this seems to work at all...
#set(CMAKE_BUILD_TYPE Debug)
#set(default_build_type "Debug")
#if (NOT CMAKE_BUILD_TYPE)
#  set (CMAKE_BUILD_TYPE "Debug" CACHE STRING "Default build type: Debug" FORCE)
#endif()

include_directories(include)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

#add_library(occgrid STATIC src/occgrid.c)
#add_library(lz4 STATIC src/lz4.c)
#add_library(sdr STATIC src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/simple_dft.c src/sync_long.c src/sync_short.c src/xmit_pipe.c)
#add_executable(era1 src/main.c)
#add_executable(era2 src/main.c)


add_executable(era1 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c  src/sync_long.c src/sync_short.c src/xmit_pipe.c)
add_executable(era2 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c src/xmit_pipe.c)

add_executable(pera1 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c  src/sync_long.c src/sync_short.c src/xmit_pipe.c)
add_executable(pera2 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c src/xmit_pipe.c)

add_executable(tera1 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c  src/sync_long.c src/sync_short.c src/xmit_pipe.c)
add_executable(tera2 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c src/xmit_pipe.c)

add_executable(tpera1 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c  src/sync_long.c src/sync_short.c src/xmit_pipe.c)
add_executable(tpera2 src/main.c src/occgrid.c src/lz4.c src/complex_ops.c src/crc.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c src/xmit_pipe.c)


add_executable(do_recv_pipe src/recv_main.c src/complex_ops.c src/delay.c src/fft.c src/fir.c src/gr_equalizer.c src/ofdm.c src/recv_pipe.c src/sdr_descrambler.c src/sdr_viterbi.c src/sync_long.c src/sync_short.c)
add_executable(do_xmit_pipe src/xmit_main.c src/crc.c src/fft.c src/xmit_pipe.c)

target_compile_definitions(era1 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(era2 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(pera1 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(pera2 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(tera1 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(tera2 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(tpera1 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(tpera2 PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(do_recv_pipe PRIVATE DEC_SIG_FIELD_ON_HW=false)
target_compile_definitions(do_xmit_pipe PRIVATE DEC_SIG_FIELD_ON_HW=false)

target_compile_definitions(pera1 PRIVATE PARALLEL_PTHREADS=true)
target_compile_definitions(pera2 PRIVATE PARALLEL_PTHREADS=true)
target_compile_definitions(tpera1 PRIVATE PARALLEL_PTHREADS=true)
target_compile_definitions(tpera2 PRIVATE PARALLEL_PTHREADS=true)

target_compile_definitions(era1 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(era2 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(era1 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(era2 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(era1 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(era2 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(era1 PRIVATE RAYTR_RANGE=100)
target_compile_definitions(era2 PRIVATE RAYTR_RANGE=100)

target_compile_definitions(tera1 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(tera2 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(tera1 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(tera2 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(tera1 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(tera2 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(tera1 PRIVATE RAYTR_RANGE=100)
target_compile_definitions(tera2 PRIVATE RAYTR_RANGE=100)

target_compile_definitions(pera1 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(pera2 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(pera1 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(pera2 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(pera1 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(pera2 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(pera1 PRIVATE RAYTR_RANGE=100)
target_compile_definitions(pera2 PRIVATE RAYTR_RANGE=100)

target_compile_definitions(tpera1 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(tpera2 PRIVATE GRID_MAP_X_DIM=100)
target_compile_definitions(tpera1 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(tpera2 PRIVATE GRID_MAP_Y_DIM=100)
target_compile_definitions(tpera1 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(tpera2 PRIVATE GRID_MAP_RESLTN=2.0)
target_compile_definitions(tpera1 PRIVATE RAYTR_RANGE=100)
target_compile_definitions(tpera2 PRIVATE RAYTR_RANGE=100)

target_compile_definitions(era1 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(era2 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(pera1 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(pera2 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(tera1 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(tera2 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(tpera1 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(tpera2 PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(do_recv_pipe PRIVATE USE_ESP_INTERFACE)
target_compile_definitions(do_xmit_pipe PRIVATE USE_ESP_INTERFACE)

target_compile_definitions(tera1 PRIVATE INT_TIME)
target_compile_definitions(tera2 PRIVATE INT_TIME)
target_compile_definitions(tpera1 PRIVATE INT_TIME)
target_compile_definitions(tpera2 PRIVATE INT_TIME)
#target_compile_definitions(do_recv_pipe PRIVATE INT_TIME)
#target_compile_definitions(do_xmit_pipe PRIVATE INT_TIME)

target_compile_definitions(era1 PRIVATE BAG_PORT=5556)
target_compile_definitions(era2 PRIVATE BAG_PORT=5557)
target_compile_definitions(era1 PRIVATE XMIT_PORT=5558)
target_compile_definitions(era2 PRIVATE XMIT_PORT=5560)
target_compile_definitions(era1 PRIVATE RECV_PORT=5559)
target_compile_definitions(era2 PRIVATE RECV_PORT=5561)
target_compile_definitions(era1 PRIVATE CAR_PORT=5562)
target_compile_definitions(era2 PRIVATE CAR_PORT=5563)

target_compile_definitions(tera1 PRIVATE BAG_PORT=5556)
target_compile_definitions(tera2 PRIVATE BAG_PORT=5557)
target_compile_definitions(tera1 PRIVATE XMIT_PORT=5558)
target_compile_definitions(tera2 PRIVATE XMIT_PORT=5560)
target_compile_definitions(tera1 PRIVATE RECV_PORT=5559)
target_compile_definitions(tera2 PRIVATE RECV_PORT=5561)
target_compile_definitions(tera1 PRIVATE CAR_PORT=5562)
target_compile_definitions(tera2 PRIVATE CAR_PORT=5563)

target_compile_definitions(pera1 PRIVATE BAG_PORT=5556)
target_compile_definitions(pera2 PRIVATE BAG_PORT=5557)
target_compile_definitions(pera1 PRIVATE XMIT_PORT=5558)
target_compile_definitions(pera2 PRIVATE XMIT_PORT=5560)
target_compile_definitions(pera1 PRIVATE RECV_PORT=5559)
target_compile_definitions(pera2 PRIVATE RECV_PORT=5561)
target_compile_definitions(pera1 PRIVATE CAR_PORT=5562)
target_compile_definitions(pera2 PRIVATE CAR_PORT=5563)

target_compile_definitions(tpera1 PRIVATE BAG_PORT=5556)
target_compile_definitions(tpera2 PRIVATE BAG_PORT=5557)
target_compile_definitions(tpera1 PRIVATE XMIT_PORT=5558)
target_compile_definitions(tpera2 PRIVATE XMIT_PORT=5560)
target_compile_definitions(tpera1 PRIVATE RECV_PORT=5559)
target_compile_definitions(tpera2 PRIVATE RECV_PORT=5561)
target_compile_definitions(tpera1 PRIVATE CAR_PORT=5562)
target_compile_definitions(tpera2 PRIVATE CAR_PORT=5563)

target_compile_definitions(era1 PRIVATE IMAGE_FN="gridimage_era1_")
target_compile_definitions(era2 PRIVATE IMAGE_FN="gridimage_era2_")
target_compile_definitions(era1 PRIVATE ASCII_FN="asciimap_era1_")
target_compile_definitions(era2 PRIVATE ASCII_FN="asciimap_era2_")
target_compile_definitions(tera1 PRIVATE IMAGE_FN="gridimage_tera1_")
target_compile_definitions(tera2 PRIVATE IMAGE_FN="gridimage_tera2_")
target_compile_definitions(tera1 PRIVATE ASCII_FN="asciimap_tera1_")
target_compile_definitions(tera2 PRIVATE ASCII_FN="asciimap_tera2_")

target_compile_definitions(pera1 PRIVATE IMAGE_FN="gridimage_pera1_")
target_compile_definitions(pera2 PRIVATE IMAGE_FN="gridimage_pera2_")
target_compile_definitions(pera1 PRIVATE ASCII_FN="asciimap_pera1_")
target_compile_definitions(pera2 PRIVATE ASCII_FN="asciimap_pera2_")
target_compile_definitions(tpera1 PRIVATE IMAGE_FN="gridimage_tpera1_")
target_compile_definitions(tpera2 PRIVATE IMAGE_FN="gridimage_tpera2_")
target_compile_definitions(tpera1 PRIVATE ASCII_FN="asciimap_tpera1_")
target_compile_definitions(tpera2 PRIVATE ASCII_FN="asciimap_tpera2_")

# Enable this if you want intermediate files (PPM) of the fused gridmaps
#target_compile_definitions(era1 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(era2 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(tera1 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(tera2 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(pera1 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(pera2 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(tpera1 PRIVATE WRITE_FUSED_MAPS)
#target_compile_definitions(tpera2 PRIVATE WRITE_FUSED_MAPS)

# Enable this if you want intermediate files of the fused gridmaps
#target_compile_definitions(era1 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(era2 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(tera1 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(tera2 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(pera1 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(pera2 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(tpera1 PRIVATE WRITE_ASCII_MAP)
#target_compile_definitions(tpera2 PRIVATE WRITE_ASCII_MAP)

# Enable this for detailed run-time debug information
#target_compile_definitions(era1 PRIVATE DEBUG_MODE)
#target_compile_definitions(era2 PRIVATE DEBUG_MODE)
#target_compile_definitions(tera1 PRIVATE DEBUG_MODE)
#target_compile_definitions(tera2 PRIVATE DEBUG_MODE)
#target_compile_definitions(pera1 PRIVATE DEBUG_MODE)
#target_compile_definitions(pera2 PRIVATE DEBUG_MODE)
#target_compile_definitions(tpera1 PRIVATE DEBUG_MODE)
#target_compile_definitions(tpera2 PRIVATE DEBUG_MODE)
#target_compile_definitions(do_recv_pipe PRIVATE DEBUG_MODE)
#target_compile_definitions(do_xmit_pipe PRIVATE DEBUG_MODE)

# Enable this for some thread debug information
#target_compile_definitions(era1 PRIVATE DEBUG_THREADS)
#target_compile_definitions(era2 PRIVATE DEBUG_THREADS)
#target_compile_definitions(tera1 PRIVATE DEBUG_THREADS)
#target_compile_definitions(tera2 PRIVATE DEBUG_THREADS)
#target_compile_definitions(pera1 PRIVATE DEBUG_THREADS)
#target_compile_definitions(pera2 PRIVATE DEBUG_THREADS)
#target_compile_definitions(tpera1 PRIVATE DEBUG_THREADS)
#target_compile_definitions(tpera2 PRIVATE DEBUG_THREADS)
#target_compile_definitions(do_recv_pipe PRIVATE DEBUG_THREADS)
#target_compile_definitions(do_xmit_pipe PRIVATE DEBUG_THREADS)

# Enable this for some thread debug information
#target_compile_definitions(era1 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(era2 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(tera1 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(tera2 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(pera1 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(pera2 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(tpera1 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(tpera2 PRIVATE SUPER_VERBOSE)
#target_compile_definitions(do_recv_pipe PRIVATE SUPER_VERBOSE)
#target_compile_definitions(do_xmit_pipe PRIVATE SUPER_VERBOSE)

target_link_libraries(era1 LINK_PUBLIC m)
target_link_libraries(era2 LINK_PUBLIC m)
target_link_libraries(tera1 LINK_PUBLIC m)
target_link_libraries(tera2 LINK_PUBLIC m)

target_link_libraries(pera1 LINK_PUBLIC m pthread)
target_link_libraries(pera2 LINK_PUBLIC m pthread)
target_link_libraries(tpera1 LINK_PUBLIC m pthread)
target_link_libraries(tpera2 LINK_PUBLIC m pthread)

target_link_libraries(do_recv_pipe LINK_PUBLIC m)
target_link_libraries(do_xmit_pipe LINK_PUBLIC m)
